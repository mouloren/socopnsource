#The secret kelsy is used to secure cryptographic functions.
# WARNING: If you deploy your application on several servers, make sure to use the same key.
play.http.secret.key="tb63VY8VgG2iq410k93JHXA8bc3mQhWQ"
play.http.parser.maxMemoryBuffer=1M
play.http.parser.maxDiskBuffer=100M
play.ws.ssl.loose.acceptAnyCertificate=true


# Authentication
auth {
        # "type" parameter contains the authentication provider(s). It can be multi-valued, which is useful
        # for migration.
        # The available auth types are:
        # - services.LocalAuthSrv : passwords are stored in the user entity within ElasticSearch). No
        #   configuration are required.
        # - ad : use ActiveDirectory to authenticate users. The associated configuration shall be done in
        #   the "ad" section below.
        # - ldap : use LDAP to authenticate users. The associated configuration shall be done in the
        #   "ldap" section below.
        provider = [local]


        ad {
                # The Windows domain name in DNS format. This parameter is required if you do not use
                # 'serverNames' below.
                #domainFQDN = "mydomain.local"


                # Optionally you can specify the host names of the domain controllers instead of using 'domainFQDN
                # above. If this parameter is not set, TheHive uses 'domainFQDN'.
                #serverNames = [ad1.mydomain.local, ad2.mydomain.local]


                # The Windows domain name using short format. This parameter is required.
                #domainName = "MYDOMAIN"


                # If 'true', use SSL to connect to the domain controller.
                #useSSL = true
        }


        ldap {
                # The LDAP server name or address. The port can be specified using the 'host:port'
                # syntax. This parameter is required if you don't use 'serverNames' below.
                #serverName = "ldap.mydomain.local:389"


                # If you have multiple LDAP servers, use the multi-valued setting 'serverNames' instead.
                #serverNames = [ldap1.mydomain.local, ldap2.mydomain.local]


                # Account to use to bind to the LDAP server. This parameter is required.
                #bindDN = "cn=thehive,ou=services,dc=mydomain,dc=local"


                # Password of the binding account. This parameter is required.
                #bindPW = "***secret*password***"


                # Base DN to search users. This parameter is required.
                #baseDN = "ou=users,dc=mydomain,dc=local"


                # Filter to search user in the directory server. Please note that {0} is replaced
                # by the actual user name. This parameter is required.
                #filter = "(cn={0})"


                # If 'true', use SSL to connect to the LDAP directory server.
                #useSSL = true
        }
}


# Cortex
# TheHive can connect to one or multiple  Cortex  instances.  Give  each
# Cortex instance a name and specify the associated URL.
#play.modules.enabled += connectors.cortex.CortexConnector
#cortex {
#  "cortex"{
#    url = "http://cortex:9001"
#    key = "+gks06YSB3VOn9OEQHhdlyqsQV8yLzuV"
#  }
#}


# MISP
# TheHive can connect to one or multiple MISP instances. Give each  MISP
# instance a name and specify the associated Authkey that must  be  used
# to poll events, the case template that should be used by default  when
# importing events as well as the tags that must be added to cases  upon
# import.


# Prior to configuring the integration with a MISP  instance,  you  must
# enable the MISP connector. This will allow you  to  import  events  to
# and/or export cases to the MISP instance(s).
## Enable the MISP module (import and export)
#play.modules.enabled += connectors.misp.MispConnector
#misp {
    # Interval between consecutive MISP event imports in hours (h) or
    # minutes (m).
#    interval = 1h
#    "MISP-LOCAL"{
        # # MISP connection configuration requires at least an url and a key. The key must
        # # be linked with a sync account on MISP.
#        url = "https://192.168.233.150" # Yes, localhost, not localhost:8080
#        key = "KwG6sgYOiOWy7K6xU4313l1eHKYCLcc9enWXYMcy"
        #
        # # Name of the case template in TheHive that shall be used to import
        # # MISP events as cases by default.
#        caseTemplate = "MISP-EVENT"
        #
        # # Optional tags to add to each observable imported from an event
        # # available on this instance.
#        tags = ["misp-local"]
        #
        # ## MISP event filters
        # # MISP filters is used to exclude events from the import.
        # # Filter criteria are:
        # # The number of attribute
        # max-attributes = 1000
        # # The size of its JSON representation
        # max-size = 1 MiB
        # # The age of the last publish date
        # max-age = 7 days
        # # Organization and tags
        # exclusion {
        # organisation = ["bad organisation", "other orga"]
        # tags = ["tag1", "tag2"]
        # }
        #
        # ## HTTP client configuration (SSL and proxy)
        # # Truststore to use to validate the X.509 certificate of the MISP
        # # instance if the default truststore is not sufficient.
        # # Proxy can also be used
     #   ws {
        # ssl.trustManager.stores = [ {
        # path = /path/to/truststore.jks
     #   ssl {}
 #        }
        # proxy {
        # host = proxy.mydomain.org
        # port = 3128
        # }
        # }
        #
        # # MISP purpose defines if this instance can be used to import events (ImportOnly), export cases (ExportOnly) or both (ImportAndExport)
        # # Default is ImportAndExport
        # purpose = ImportAndExport
#    } ## <-- Uncomment to complete the configuration
#}
